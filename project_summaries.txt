1. WhatsApp Chat Analyzer
Domain: Natural Language Processing (NLP), Data Visualization
Summary:
WhatsApp Chat Analyzer is a comprehensive tool designed to extract actionable insights from WhatsApp chat exports. It leverages advanced NLP techniques to perform sentiment analysis, identify user activity trends, and uncover message patterns. The application features interactive visualizations including timelines, activity heatmaps, user contribution charts, word clouds, and emoji usage statistics. Users can upload chat files and instantly view detailed analytics at both group and individual levels. The analyzer processes thousands of messages in seconds, making it ideal for large group chats and long-term conversation analysis.
Technologies/Tools: Python, Streamlit, Pandas, NLTK, Matplotlib, Seaborn

2. Podcast Summarization App
Domain: Natural Language Processing (NLP), API Integration, Data Visualization
Summary:
The Podcast Summarization App streamlines podcast consumption by automatically generating concise summaries and chapter breakdowns for any episode. Integrating Listen Notes API for episode metadata and Assembly AI for transcription and chapterization, the app allows users to input episode IDs and receive structured summaries within seconds. It supports navigation through chapters, saving summaries and chapters in JSON format, and exporting transcriptions as text files. The app can process episodes up to 2 hours long and supports batch summarization for multiple podcasts, enhancing accessibility for busy listeners.
Technologies/Tools: Python, Streamlit, Listen Notes API, Assembly AI API, JSON, Requests

3. Speech Recognition
Domain: Speech Recognition, NLP, API Integration
Summary:
This project delivers high-accuracy speech-to-text conversion for audio files using Assembly AI's robust API. Designed for scalability, it can transcribe lectures, interviews, meetings, and podcasts, supporting files up to several hours in length. The solution automates audio upload, transcription retrieval, and text formatting, achieving over 90% accuracy for clear audio. It supports multiple audio formats and can process dozens of files concurrently, making it suitable for academic, media, and business use cases.
Technologies/Tools: Python, Assembly AI API, Requests

4. Disease Prediction System
Domain: Machine Learning, Healthcare
Summary:
The Disease Prediction System is an intelligent healthcare assistant that predicts possible diseases based on user-input symptoms. Utilizing machine learning algorithms trained on thousands of patient records, it offers instant diagnosis and actionable recommendations. The system features a user-friendly interface for symptom entry and displays top probable diseases with confidence scores. It supports over 100 symptoms and 40+ disease categories, aiming to assist in early diagnosis and healthcare decision-making. The model achieves up to 85% prediction accuracy and can be integrated into telemedicine platforms.
Technologies/Tools: Python, scikit-learn, Pandas, Streamlit, Matplotlib

5. LIFI CAPSTONE PROJECT
Domain: IoT, Embedded Systems, Wireless Communication
Summary:
The LIFI Capstone Project pioneers an automatic toll collection system using LiFi (Light Fidelity) technology, transmitting data via visible light between vehicles and toll gates. The system includes hardware prototypes with LED transmitters and LDR receivers, ESP8266 microcontrollers, and secure WiFi modules. It can process vehicle identification and toll deduction in under 2 seconds per transaction, supporting up to 100 vehicles per minute. The project features robust data encoding/decoding algorithms, real-time activity monitoring, and detailed system diagrams, demonstrating the future of contactless tolling.
Technologies/Tools: IoT hardware (LEDs, LDRs, ESP8266), Python, Embedded C, WiFi modules

6. NaviGo 
Domain: Web Development, REST APIs, Mapping Services
Summary:
NaviGo is a scalable backend system for ride-sharing and navigation applications. It provides RESTful endpoints for user registration, authentication, profile management, ride creation, and mapping services. The backend integrates with mapping APIs for address geocoding, real-time distance and time calculations, and location suggestions. Security is ensured through JWT-based authentication and session management. The system supports thousands of concurrent users and can process hundreds of ride requests per minute, making it suitable for urban mobility platforms.
Technologies/Tools: Node.js, Express, REST APIs, JWT, Mapping APIs (Google Maps, Mapbox), MongoDB, Postman

7. MediGenie
Domain: Healthcare, Web Development, REST APIs
Summary:
MediGenie is a backend system for healthcare management, providing RESTful APIs for patient registration, authentication, appointment scheduling, doctor management, and medical records. It integrates with third-party services for notifications and supports secure access using JWT authentication. The system is designed for scalability, handling multiple concurrent users and ensuring data privacy for sensitive health information.
Technologies/Tools: Node.js, Express, REST APIs, JWT, MongoDB, Postman

8. Portfolio

Domain: Web Development

Summary:
A personal website to showcase my work and achievements in web development, machine learning, IoT, and NLP. The site features project highlights and a contact form for direct communication. Designed for clarity and ease of navigation, it demonstrates both frontend and backend skills.

Technologies/Tools: HTML, CSS, JavaScript


9. Thapar Book Store

Domain: Web Development, E-commerce, Auction System

Summary:
A full-stack web app for auctioning and selling used books/notes among Thapar Institute students. Enables direct, secure transactions, access to top study materials, and affordable prices. Features include user registration, item listing, bidding, auction management, comments, feedback, and winner history. Supports 10+ UI pages, 6+ backend diagrams, hundreds of concurrent users, and thousands of listings. Secure authentication, real-time auction updates, and scalable backend.

Technologies/Tools:
Python, Django, SQLite, HTML, CSS, JavaScript, Bootstrap, Whitenoise, Heroku, GitHub, REST APIs

